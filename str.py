my_str1 = 'Сычев Владислав Викторович'
my_str2 = 'Сычева Татьяна Олеговна'
print(my_str1)
#конкатенация
print(my_str1+my_str2)
#дублирование строки.
print(my_str1 * 3)
#длина строки
print(len(my_str1))
#доступ по индексу.
print(my_str1[0])
print(my_str1[-1])
#срез
print(my_str1[0:10])
#поиск подстроки в строке. (первое вхождение)
print(my_str1.find('в'))
#поиск подстроки в строке. (последнее вхождение)
print(my_str1.rfind('в'))
#поиск подстроки в стоке индекс.
print(my_str1.index('Влад'))
#замена подстроки
print(my_str1.replace('Влад','Блад'))
#разбиение строки по разделителю.
a,b,c = my_str1.split(' ')
print(a)
print(b)
print(c)
#проверка состоит ли строка из цифр.
print(my_str1.isdigit())
#проверка состоит ли строка из букв.
print(my_str1.isalpha())
#состоит ли строка из пробелов, новой строки, табуляции итд.
print(my_str1.isspace())
# начинаются ли слова в стоке с заглавных букв.
print(my_str1.istitle())
#перевод в верхний регистр.
print(my_str1.upper())
#перевод в нижний регистр.
print(my_str1.lower())
#начинается ли строка с
print(my_str1.startswith('Петров'))
print(my_str1.startswith('Сычев'))
#заканчивается ли строка с 
print(my_str1.endswith('Викторович'))
print(my_str1.endswith('Петрович'))
#склеивание данных в строку (через кортеж)
a = 'Сычев'
b = 'Владислав'
c = 'Викторович'
myTuple = (a, b, c);
print(" ".join(myTuple))
#Переводит первый символ в верхний регистр, а все остальные в нижний.
print(my_str1.capitalize())
#Возвращает количество непересекающихся вхождений подстроки в диапазоне.
print(my_str1.count('Влад'))

#удаление пробельных символов в начале строки.
print(my_str1.lstrip())
#удаление пробельных символов в конце строки.
print(my_str1.rstrip())
#удаление пробельных символов в начале и конце строки.
print(my_str1.strip())
#Переводит символы нижнего регистра в верхний, а верхнего – в нижний
print(my_str1.swapcase())
#Первую букву каждого слова переводит в верхний регистр, а все остальные в нижний
print(my_str1.title())
#использование фунции format 
print('{0} {1} {2}'.format(a,b,c))















